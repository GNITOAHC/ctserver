package database

import (
	"context"
	"time"

	"github.com/jackc/pgx/v5/pgxpool"
)

type Database struct {
	pool *pgxpool.Pool
}

const NoExpiration time.Duration = -1

type DataTable struct {
	// data_t table's fields
	Username     string
	Id           string // Will be generated by the database (no need to set)
	Path         string // Path of the data, should start with / if it's user's custom path
	Type         string // "file", "url", "dir" or "text"
	Content      string // Original URL for type "url", source url for type "file", name of dir or content of text
	Description  string // Short description of the data
	AncestorId   string // Empty if root, else the parent id
	DescendantId []string
	CreatedAt    time.Time // Will be generated by the database (no need to set)
	ExpiredAt    time.Time // Will be generated by the function (no need to set)

	// Custom fields
	Duration time.Duration
}

func New(uri string) *Database {
	// Connect to database, panic if failed
	pool, err := pgxpool.New(context.Background(), uri)
	if err != nil {
		panic(err)
	}

	err = pool.Ping(context.Background())
	if err != nil {
		panic(err)
	}

	return &Database{pool: pool}
}
